[0/10]  Loss_D: 0.0027  Loss_G: 0.0004  D(x): 0.0187    D(G(z)): 0.9538
[1/10]  Loss_D: 0.0003  Loss_G: 0.0001  D(x): 0.0091    D(G(z)): 0.9795
[2/10]  Loss_D: 0.0001  Loss_G: 0.0001  D(x): 0.0100    D(G(z)): 0.9897
[3/10]  Loss_D: 0.0001  Loss_G: 0.0000  D(x): 0.0058    D(G(z)): 0.9888
[4/10]  Loss_D: 0.0001  Loss_G: 0.0000  D(x): 0.0044    D(G(z)): 0.9873
[5/10]  Loss_D: 0.0000  Loss_G: 0.0000  D(x): 0.0049    D(G(z)): 0.9944
[6/10]  Loss_D: 0.0001  Loss_G: 0.0000  D(x): 0.0038    D(G(z)): 0.9907
[7/10]  Loss_D: 0.0001  Loss_G: 0.0000  D(x): 0.0027    D(G(z)): 0.9911
[8/10]  Loss_D: 0.0000  Loss_G: 0.0000  D(x): 0.0042    D(G(z)): 0.9936
[9/10]  Loss_D: 0.0001  Loss_G: 0.0000  D(x): 0.0030    D(G(z)): 0.9910


[0/10]  Loss_D: 0.0101  Loss_G: 0.0041  D(x): 0.0044    D(G(z)): 0.9843
[1/10]  Loss_D: 0.0038  Loss_G: 0.0013  D(x): 0.0013    D(G(z)): 0.9938
[2/10]  Loss_D: 0.0012  Loss_G: 0.0008  D(x): 0.0008    D(G(z)): 0.9985
[3/10]  Loss_D: 0.0010  Loss_G: 0.0005  D(x): 0.0005    D(G(z)): 0.9986
[4/10]  Loss_D: 0.0006  Loss_G: 0.0003  D(x): 0.0003    D(G(z)): 0.9991
[5/10]  Loss_D: 0.0005  Loss_G: 0.0002  D(x): 0.0002    D(G(z)): 0.9992
[6/10]  Loss_D: 0.0004  Loss_G: 0.0002  D(x): 0.0002    D(G(z)): 0.9994
[7/10]  Loss_D: 0.0002  Loss_G: 0.0002  D(x): 0.0002    D(G(z)): 0.9997
[8/10]  Loss_D: 0.0004  Loss_G: 0.0001  D(x): 0.0001    D(G(z)): 0.9994
[9/10]  Loss_D: 0.0002  Loss_G: 0.0001  D(x): 0.0001    D(G(z)): 0.9996


HERE
Generator
torch.Size([8, 3, 64, 64])
torch.Size([8, 32, 64, 64])
torch.Size([8, 64, 32, 32])
torch.Size([8, 128, 16, 16])
torch.Size([8, 256, 8, 8])
torch.Size([8, 256, 8, 8])
torch.Size([8, 256, 8, 8])
torch.Size([8, 256, 8, 8])
torch.Size([8, 256, 8, 8])
torch.Size([8, 256, 8, 8])
torch.Size([8, 256, 8, 8])
torch.Size([8, 128, 16, 16])
torch.Size([8, 64, 32, 32])
torch.Size([8, 32, 64, 64])
torch.Size([8, 3, 64, 64])
Discriminator
torch.Size([8, 3, 64, 64])
torch.Size([8, 64, 16, 16])
torch.Size([8, 128, 8, 8])
torch.Size([8, 256, 4, 4])
torch.Size([8, 1, 1, 1])


Traceback (most recent call last):
  File "train.py", line 56, in <module>
    train_pyramid(opt, dataloader)
  File "C:\Users\ntseng\Documents\ROAHM\MUFFT-GAN\train_utils\train_pyramid.py", line 17, in train_pyramid
    train_layer(netD, netG, opt, dataloader)
  File "C:\Users\ntseng\Documents\ROAHM\MUFFT-GAN\train_utils\train_pyramid.py", line 83, in train_layer
    plt.imshow(fakes[0])
  File "D:\Anaconda3\envs\pytorch\lib\site-packages\matplotlib\pyplot.py", line 2684, in imshow
    None else {}), **kwargs)
  File "D:\Anaconda3\envs\pytorch\lib\site-packages\matplotlib\__init__.py", line 1599, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
  File "D:\Anaconda3\envs\pytorch\lib\site-packages\matplotlib\cbook\deprecation.py", line 369, in wrapper
    return func(*args, **kwargs)
  File "D:\Anaconda3\envs\pytorch\lib\site-packages\matplotlib\cbook\deprecation.py", line 369, in wrapper
    return func(*args, **kwargs)
  File "D:\Anaconda3\envs\pytorch\lib\site-packages\matplotlib\axes\_axes.py", line 5679, in imshow
    im.set_data(X)
  File "D:\Anaconda3\envs\pytorch\lib\site-packages\matplotlib\image.py", line 690, in set_data
    .format(self._A.shape))
TypeError: Invalid shape (3, 64, 64) for image data